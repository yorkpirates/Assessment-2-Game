buildscript {


    repositories {
        mavenLocal()
        mavenCentral()
        gradlePluginPortal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        google()
    }
    dependencies {


    }
}

allprojects {
    apply plugin: "eclipse"

    version = '1.0'
    ext {
        appName = "Pirate-Game"
        gdxVersion = '1.10.1-SNAPSHOT'
        roboVMVersion = '2.3.12'
        box2DLightsVersion = '1.5'
        ashleyVersion = '1.7.3'
        aiVersion = '1.8.2'
        gdxControllersVersion = '2.1.0'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        google()
        gradlePluginPortal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    }
}

project(":desktop") {
    apply plugin: "java-library"


    dependencies {
        implementation project(":core")
        api "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        api "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop"
        api "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"

    }
}

project(":core") {
    apply plugin: "java-library"


    dependencies {
        api "com.badlogicgames.gdx:gdx:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-ai:$aiVersion"
        api "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"

    }
}

project(":tests") {
    apply plugin: "java"

    sourceSets.test.java.srcDirs = ["src/"]

    dependencies {

        /**
         * If you do have some classes to test in os specific code you may want to uncomment
         * some of these lines.
         *
         * BUT: I recommend to create seperate test sub projects for each platform. Trust me :)
         *
         */

//        compile project(":android")
//        compile project(":html")
//        compile project(":desktop")


//        if(System.getProperty("os.name").toLowerCase().indexOf("mac") >= 0) {
//        	compile project(":ios")
//        }

        implementation project(":core")

        implementation "junit:junit:4.+"
        implementation "org.mockito:mockito-all:1.9.+"

        implementation "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
        implementation "com.badlogicgames.gdx:gdx:$gdxVersion"

        testImplementation 'junit:junit:4.+'
        testImplementation "org.mockito:mockito-all:1.9.+"

        testImplementation "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
        testImplementation "com.badlogicgames.gdx:gdx:$gdxVersion"
        testImplementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    }
}

tasks.withType(Test) {
    useJUnitPlatform()
}

dependencies {
    //testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    //testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}